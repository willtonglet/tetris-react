{"version":3,"sources":["theme.js","gameHelpers.js","components/Tetris/styles.js","tetrominos.js","hooks/useStage.js","hooks/useMobileDetect.js","components/Stage/styles.js","components/Cell/styles.js","components/Cell/index.js","components/Stage/index.js","components/Display/styles.js","components/Display/index.js","components/StartButton/styles.js","components/StartButton/index.js","components/Switch/styles.js","components/Switch/index.js","components/ControlButton/style.js","components/ControlButton/index.js","components/Tetris/index.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["lightTheme","bg","text","darkTheme","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","theme","StyledTetris","_templateObject2","_ref2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","getMobileDetect","userAgent","isAndroid","Boolean","match","isIos","isSSR","isMobile","isDesktop","StyledStage","styles_templateObject","props","height","width","StyledCell","Cell_styles_templateObject","type","React","memo","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","Display_styles_templateObject","gameOver","Display","StyledStartButton","button","StartButton_styles_templateObject","StartButton","callback","onClick","StyledSwitch","label","Switch_styles_templateObject","Switch","onChange","htmlFor","className","id","StyledControl","style_templateObject","ControlButton","onMouseUp","left","right","down","onMouseDown","e","preventDefault","index_esm","size","Tetris","dropTime","setDropTime","setGameOver","_useState5","_useState6","isStarted","setIsStarted","_useState7","_useState8","setTheme","mainRef","useRef","_usePlayer","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","objectSpread2","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","detectMobile","navigator","useMobileDetect","movePlayer","startGame","current","focus","drop","dropPlayer","delay","savedCallback","setInterval","clearInterval","useInterval","styled_components_browser_esm","role","tabIndex","onKeyDown","keyCode","move","onKeyUp","ref","Fragment","components_Display","components_Stage","components_ControlButton","components_Switch","components_StartButton","App","components_Tetris","window","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.346b497c.chunk.js","sourcesContent":["export const lightTheme = {\n  bg: \"#eee\",\n  text: \"#111\",\n};\n\nexport const darkTheme = {\n  bg: \"#222\",\n  text: \"#fff\",\n};\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import styled from \"styled-components\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  overflow: hidden;\n  outline: none;\n  display: flex;\n  flex-direction: column;\n\n  .wrapper {\n    width: 20rem;\n    text-align: center;\n\n    h1 {\n      font-family: Pixel, Arial, Helvetica, sans-serif;\n      font-size: 4.6rem;\n      color: ${({ theme }) => theme.text};\n    }\n  }\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 0 2rem;\n  background-color: ${({ theme }) => theme.bg};\n\n  header {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1rem;\n  }\n\n  footer {\n    margin-top: 1rem;\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n    display: flex;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0, 0, 0\" },\n  I: {\n    shape: [\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n    ],\n    color: \"80, 227, 230\",\n  },\n  J: {\n    shape: [\n      [0, \"J\", 0],\n      [0, \"J\", 0],\n      [\"J\", \"J\", 0],\n    ],\n    color: \"36, 95, 223\",\n  },\n  L: {\n    shape: [\n      [0, \"L\", 0],\n      [0, \"L\", 0],\n      [0, \"L\", \"L\"],\n    ],\n    color: \"223, 173, 36\",\n  },\n  O: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: \"223, 217, 36\",\n  },\n  S: {\n    shape: [\n      [0, \"S\", \"S\"],\n      [\"S\", \"S\", 0],\n      [0, 0, 0],\n    ],\n    color: \"48, 211, 56\",\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      [\"T\", \"T\", \"T\"],\n      [0, \"T\", 0],\n    ],\n    color: \"132, 61, 198\",\n  },\n  Z: {\n    shape: [\n      [\"Z\", \"Z\", 0],\n      [0, \"Z\", \"Z\"],\n      [0, 0, 0],\n    ],\n    color: \"227, 78, 78\",\n  },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = (newStage) =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return ack;\n        }\n\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = (prevStage) => {\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? \"merged\" : \"clear\"}`,\n            ];\n          }\n        });\n      });\n\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage((prev) => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import { useEffect } from \"react\";\n\nconst getMobileDetect = (userAgent) => {\n  const isAndroid = () => Boolean(userAgent.match(/Android/i));\n  const isIos = () => Boolean(userAgent.match(/iPhone|iPad|iPod/i));\n  const isOpera = () => Boolean(userAgent.match(/Opera Mini/i));\n  const isWindows = () => Boolean(userAgent.match(/IEMobile/i));\n  const isSSR = () => Boolean(userAgent.match(/SSR/i));\n\n  const isMobile = () =>\n    Boolean(isAndroid() || isIos() || isOpera() || isWindows());\n  const isDesktop = () => Boolean(!isMobile() && !isSSR());\n  return {\n    isMobile,\n    isDesktop,\n    isAndroid,\n    isIos,\n    isSSR,\n  };\n};\n\nexport const useMobileDetect = () => {\n  useEffect(() => {}, []);\n  const userAgent =\n    typeof navigator === \"undefined\" ? \"SSR\" : navigator.userAgent;\n  return getMobileDetect(userAgent);\n};\n","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(45vh / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  box-shadow: 0px 0px 41px 8px rgba(0, 0, 0, 0.4);\n  width: 100%;\n  max-width: 45vh;\n  background: #111;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from \"react\";\nimport { StyledCell } from \"./styles\";\nimport { TETROMINOS } from \"../../tetrominos\";\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from \"react\";\nimport { StyledStage } from \"./styles\";\n\nimport Cell from \"../Cell\";\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map((row) => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0.2rem;\n  padding: 0.7rem;\n  border: 2px solid #777;\n  border-radius: 0.5rem;\n  color: ${(props) => (props.gameOver ? \"#ff6d00\" : \"#999\")};\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from \"react\";\nimport { StyledDisplay } from \"./styles\";\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import styled from \"styled-components\";\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  padding: 20px 0;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 10px;\n  border: none;\n  color: white;\n  background: #ff6d00;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { StyledStartButton } from \"./styles\";\n\nconst StartButton = ({ callback, text }) => (\n  <StyledStartButton onClick={callback}>{text}</StyledStartButton>\n);\n\nexport default StartButton;\n","import styled from \"styled-components\";\n\nexport const StyledSwitch = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: absolute;\n  top: 1rem;\n\n  .theme-switch {\n    display: inline-block;\n    height: 24px;\n    position: relative;\n    width: 45px;\n\n    input {\n      display: none;\n    }\n\n    .slider {\n      background-color: #666;\n      bottom: 0;\n      cursor: pointer;\n      left: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n      transition: 0.4s;\n\n      &:before {\n        background-color: #fff;\n        bottom: 4px;\n        content: \"\";\n        height: 16px;\n        left: 4px;\n        position: absolute;\n        transition: 0.4s;\n        width: 16px;\n      }\n\n      &.round {\n        border-radius: 34px;\n\n        &:before {\n          border-radius: 50%;\n        }\n      }\n    }\n\n    input:checked + .slider {\n      background-color: #ff6d00;\n    }\n\n    input:checked + .slider:before {\n      transform: translateX(20px);\n    }\n  }\n  .text {\n    color: ${({ theme }) => theme.text};\n    margin-top: 0.5rem;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 0.8rem;\n  }\n`;\n","import React from \"react\";\nimport { StyledSwitch } from \"./styles\";\n\nconst Switch = ({ onChange, text }) => {\n  return (\n    <StyledSwitch htmlFor=\"checkbox\">\n      <label className=\"theme-switch\">\n        <input type=\"checkbox\" id=\"checkbox\" onChange={onChange} />\n        <div className=\"slider round\"></div>\n      </label>\n      <span className=\"text\">{text}</span>\n    </StyledSwitch>\n  );\n};\n\nexport default Switch;\n","import styled from \"styled-components\";\n\nexport const StyledControl = styled.button`\n  margin: 0.2rem;\n  border-radius: 0.5rem;\n  border: none;\n  height: 3rem;\n  width: 3rem;\n  color: white;\n  background: #ff6d00;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 2.5rem;\n  outline: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:active {\n    -webkit-box-shadow: inset 0px 5px 0px 0px rgba(0, 0, 0, 0.4);\n    -moz-box-shadow: inset 0px 5px 0px 0px rgba(0, 0, 0, 0.4);\n    box-shadow: inset 0px 5px 0px 0px rgba(0, 0, 0, 0.4);\n  }\n`;\n","import React from \"react\";\nimport {\n  TiArrowBack as Left,\n  TiArrowForward as Right,\n  TiArrowDownThick as Down,\n  TiArrowRepeat as Rotate,\n} from \"react-icons/ti\";\nimport { StyledControl } from \"./style\";\n\nconst ControlButton = ({ callback, onMouseUp, left, right, down }) => {\n  const renderIcons = () => {\n    if (left) return <Left size=\"\" />;\n    if (right) return <Right />;\n    if (down) return <Down />;\n    return <Rotate />;\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    callback(e);\n  };\n\n  return (\n    <StyledControl onMouseDown={handleClick} onMouseUp={onMouseUp}>\n      {renderIcons()}\n    </StyledControl>\n  );\n};\n\nexport default ControlButton;\n","import React, { useState, useRef } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../../theme\";\n\nimport { checkCollision, createStage } from \"../../gameHelpers\";\n\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles\";\n\nimport { useInterval } from \"../../hooks/useInterval\";\nimport { usePlayer } from \"../../hooks/usePlayer\";\nimport { useStage } from \"../../hooks/useStage\";\nimport { useGameStatus } from \"../../hooks/useGameStatus\";\nimport { useMobileDetect } from \"../../hooks/useMobileDetect\";\n\nimport Stage from \"../Stage\";\nimport Display from \"../Display\";\nimport StartButton from \"../StartButton\";\nimport Switch from \"../Switch\";\nimport ControlButton from \"../ControlButton\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n  const [theme, setTheme] = useState(\"dark\");\n\n  const mainRef = useRef(null);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n  const detectMobile = useMobileDetect();\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    mainRef.current.focus();\n    setStage(createStage());\n    setDropTime(500);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n    setIsStarted(true);\n  };\n\n  const drop = () => {\n    if (rows > (level + 1) * 10) {\n      setLevel((prev) => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(500 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (!gameOver) {\n      setDropTime(500 / (level + 1) + 200);\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  const handleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <StyledTetrisWrapper\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyDown={(e) => move(e)}\n        onKeyUp={keyUp}\n        ref={mainRef}\n      >\n        <StyledTetris>\n          {isStarted && !gameOver && (\n            <>\n              <header>\n                {!gameOver && (\n                  <>\n                    <Display text={`Score: ${score}`} />\n                    <Display text={`Rows: ${rows}`} />\n                    <Display text={`Level: ${level}`} />\n                  </>\n                )}\n              </header>\n              <Stage stage={stage} />\n              {detectMobile.isMobile() && (\n                <footer>\n                  <ControlButton left callback={() => movePlayer(-1)} />\n                  <ControlButton\n                    down\n                    callback={() => dropPlayer()}\n                    onMouseUp={handleMouseUp}\n                  />\n                  <ControlButton callback={() => playerRotate(stage, 1)} />\n                  <ControlButton right callback={() => movePlayer(1)} />\n                </footer>\n              )}\n            </>\n          )}\n          {(!isStarted || gameOver) && (\n            <Switch\n              onChange={handleTheme}\n              text={theme === \"light\" ? \"light\" : \"dark\"}\n            />\n          )}\n          {!isStarted && !gameOver && (\n            <div className=\"wrapper\">\n              <h1>\n                React\n                <br />\n                Tetris\n              </h1>\n              <StartButton callback={startGame} text=\"Start Game\" />\n            </div>\n          )}\n          {gameOver && (\n            <div className=\"wrapper\">\n              <h1>\n                Game\n                <br />\n                Over\n              </h1>\n              <StartButton callback={startGame} text=\"Play Again\" />\n            </div>\n          )}\n        </StyledTetris>\n      </StyledTetrisWrapper>\n    </ThemeProvider>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from \"react\";\n\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map((col) => col[index])\n    );\n\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse());\n    return rotatedTetro.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((prev) => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useCallback, useEffect } from \"react\";\n\nexport const useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((prev) => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetris from \"./components/Tetris/index\";\n\nconst App = () => {\n  return <Tetris />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}